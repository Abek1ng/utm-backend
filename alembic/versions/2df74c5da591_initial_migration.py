"""Initial migration

Revision ID: 2df74c5da591
Revises: 
Create Date: 2025-05-25 03:16:26.546116

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2df74c5da591'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('iin', sa.String(length=12), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('AUTHORITY_ADMIN', 'ORGANIZATION_ADMIN', 'ORGANIZATION_PILOT', 'SOLO_PILOT', name='userrole'), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_iin'), 'users', ['iin'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('bin', sa.String(length=12), nullable=False),
    sa.Column('company_address', sa.String(length=500), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('admin_id', sa.Integer(), sa.ForeignKey('users.id')),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('admin_id')
    )
    op.create_index(op.f('ix_organizations_bin'), 'organizations', ['bin'], unique=True)
    op.create_index(op.f('ix_organizations_deleted_at'), 'organizations', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_table('drones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('brand', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('owner_type', sa.Enum('ORGANIZATION', 'SOLO_PILOT', name='droneownertype'), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('solo_owner_user_id', sa.Integer(), nullable=True),
    sa.Column('current_status', sa.Enum('IDLE', 'ACTIVE', 'MAINTENANCE', 'UNKNOWN', name='dronestatus'), nullable=False),
    sa.Column('last_telemetry_id', sa.BigInteger(), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['last_telemetry_id'], ['telemetry_logs.id'], name='fk_drone_last_telemetry_id', use_alter=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_drone_organization_id'),
    sa.ForeignKeyConstraint(['solo_owner_user_id'], ['users.id'], name='fk_drone_solo_owner_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drones_deleted_at'), 'drones', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_drones_id'), 'drones', ['id'], unique=False)
    op.create_index(op.f('ix_drones_serial_number'), 'drones', ['serial_number'], unique=True)
    op.create_table('restricted_zones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('geometry_type', sa.Enum('CIRCLE', 'POLYGON', name='nfzgeometrytype'), nullable=False),
    sa.Column('definition_json', sa.JSON(), nullable=False),
    sa.Column('min_altitude_m', sa.Float(), nullable=True),
    sa.Column('max_altitude_m', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by_authority_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_authority_id'], ['users.id'], name='fk_restricted_zone_creator_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_restricted_zones_deleted_at'), 'restricted_zones', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_restricted_zones_id'), 'restricted_zones', ['id'], unique=False)
    op.create_index(op.f('ix_restricted_zones_name'), 'restricted_zones', ['name'], unique=False)
    op.create_table('flight_plans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('planned_departure_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('planned_arrival_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('actual_departure_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_arrival_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING_ORG_APPROVAL', 'PENDING_AUTHORITY_APPROVAL', 'APPROVED', 'REJECTED_BY_ORG', 'REJECTED_BY_AUTHORITY', 'ACTIVE', 'COMPLETED', 'CANCELLED_BY_PILOT', 'CANCELLED_BY_ADMIN', name='flightplanstatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.String(length=500), nullable=True),
    sa.Column('approved_by_organization_admin_id', sa.Integer(), nullable=True),
    sa.Column('approved_by_authority_admin_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_authority_admin_id'], ['users.id'], name='fk_flight_plan_auth_admin_id'),
    sa.ForeignKeyConstraint(['approved_by_organization_admin_id'], ['users.id'], name='fk_flight_plan_org_admin_id'),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], name='fk_flight_plan_drone_id'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_flight_plan_organization_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_flight_plan_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flight_plans_deleted_at'), 'flight_plans', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_flight_plans_id'), 'flight_plans', ['id'], unique=False)
    op.create_index(op.f('ix_flight_plans_status'), 'flight_plans', ['status'], unique=False)
    op.create_table('user_drone_assignments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], name='fk_user_drone_assignment_drone_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_drone_assignment_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'drone_id', name='pk_user_drone_assignment')
    )
    op.create_index(op.f('ix_user_drone_assignments_deleted_at'), 'user_drone_assignments', ['deleted_at'], unique=False)
    op.create_table('telemetry_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('flight_plan_id', sa.Integer(), nullable=True),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('altitude_m', sa.Float(), nullable=False),
    sa.Column('speed_mps', sa.Float(), nullable=True),
    sa.Column('heading_degrees', sa.Float(), nullable=True),
    sa.Column('status_message', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], name='fk_telemetry_log_drone_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flight_plan_id'], ['flight_plans.id'], name='fk_telemetry_log_flight_plan_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telemetry_logs_deleted_at'), 'telemetry_logs', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_telemetry_logs_drone_id'), 'telemetry_logs', ['drone_id'], unique=False)
    op.create_index(op.f('ix_telemetry_logs_flight_plan_id'), 'telemetry_logs', ['flight_plan_id'], unique=False)
    op.create_index(op.f('ix_telemetry_logs_id'), 'telemetry_logs', ['id'], unique=False)
    op.create_index(op.f('ix_telemetry_logs_timestamp'), 'telemetry_logs', ['timestamp'], unique=False)
    op.create_table('waypoints',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flight_plan_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('altitude_m', sa.Float(), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flight_plan_id'], ['flight_plans.id'], name='fk_waypoint_flight_plan_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_waypoint_flight_plan_id_sequence_order', 'waypoints', ['flight_plan_id', 'sequence_order'], unique=True)
    op.create_index(op.f('ix_waypoints_deleted_at'), 'waypoints', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_waypoints_flight_plan_id'), 'waypoints', ['flight_plan_id'], unique=False)
    op.create_index(op.f('ix_waypoints_id'), 'waypoints', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_waypoints_id'), table_name='waypoints')
    op.drop_index(op.f('ix_waypoints_flight_plan_id'), table_name='waypoints')
    op.drop_index(op.f('ix_waypoints_deleted_at'), table_name='waypoints')
    op.drop_index('ix_waypoint_flight_plan_id_sequence_order', table_name='waypoints')
    op.drop_table('waypoints')
    op.drop_index(op.f('ix_telemetry_logs_timestamp'), table_name='telemetry_logs')
    op.drop_index(op.f('ix_telemetry_logs_id'), table_name='telemetry_logs')
    op.drop_index(op.f('ix_telemetry_logs_flight_plan_id'), table_name='telemetry_logs')
    op.drop_index(op.f('ix_telemetry_logs_drone_id'), table_name='telemetry_logs')
    op.drop_index(op.f('ix_telemetry_logs_deleted_at'), table_name='telemetry_logs')
    op.drop_table('telemetry_logs')
    op.drop_index(op.f('ix_user_drone_assignments_deleted_at'), table_name='user_drone_assignments')
    op.drop_table('user_drone_assignments')
    op.drop_index(op.f('ix_flight_plans_status'), table_name='flight_plans')
    op.drop_index(op.f('ix_flight_plans_id'), table_name='flight_plans')
    op.drop_index(op.f('ix_flight_plans_deleted_at'), table_name='flight_plans')
    op.drop_table('flight_plans')
    op.drop_index(op.f('ix_restricted_zones_name'), table_name='restricted_zones')
    op.drop_index(op.f('ix_restricted_zones_id'), table_name='restricted_zones')
    op.drop_index(op.f('ix_restricted_zones_deleted_at'), table_name='restricted_zones')
    op.drop_table('restricted_zones')
    op.drop_index(op.f('ix_drones_serial_number'), table_name='drones')
    op.drop_index(op.f('ix_drones_id'), table_name='drones')
    op.drop_index(op.f('ix_drones_deleted_at'), table_name='drones')
    op.drop_table('drones')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_iin'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_deleted_at'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_bin'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
